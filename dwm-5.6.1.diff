diff -urpN dwm-source/config.def.h dwm-patched/config.def.h
--- dwm-source/config.def.h	2009-07-30 08:59:20.000000000 -0700
+++ dwm-patched/config.def.h	2009-08-01 13:38:15.000000000 -0700
@@ -1,40 +1,53 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
-static const char font[]            = "-*-*-medium-*-*-*-14-*-*-*-*-*-*-*";
-static const char normbordercolor[] = "#cccccc";
-static const char normbgcolor[]     = "#cccccc";
-static const char normfgcolor[]     = "#000000";
-static const char selbordercolor[]  = "#0066ff";
-static const char selbgcolor[]      = "#0066ff";
-static const char selfgcolor[]      = "#ffffff";
+static const char font[]            = "Inconsolata 10";
+static const char normbordercolor[] = "#0066ff";
+static const char normbgcolor[]     = "#303030";
+static const char normfgcolor[]     = "#909090";
+static const char selbordercolor[]  = "#f11010";
+static const char selbgcolor[]      = "#909090";
+static const char selfgcolor[]      = "#303030";
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const Bool showbar           = True;     /* False means no bar */
 static const Bool topbar            = True;     /* False means bottom bar */
 
+#define BOTTOM_BAR_HEIGHT 23 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = { "term", "net", "comms", "media", "graphics", "vbox", "office", "other" };
 
 static const Rule rules[] = {
 	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            True,        -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       False,       -1 },
+	{ "Gimp",     NULL,       NULL,        1 << 4,            True,        -1 },
+	{ "Inkscape",     NULL,       NULL,        1 << 4,            True,        -1 },
+	{ "Gnome-mplayer",     NULL,       NULL,        1 << 3,            True,        -1 },
+	{ "Mplayer",     NULL,       NULL,        1 << 3,            True,        -1 },
+	{ "Shiretoko",  NULL,       NULL,       1 << 1,       True,       -1 },
+	{ "Evince",  NULL,       NULL,       1 << 6,       False,       -1 },
+	{ "OpenOffice",  NULL,       NULL,       1 << 6,       True,       -1 },
+	{ NULL,  NULL,       "Terminal",       1 << 0,       False,       -1 },
+	{ NULL,  NULL,       "mutt",       1 << 2,       False,       -1 },
+	{ NULL,  NULL,       "ncmpcpp",       1 << 3,       False,       -1 },
+	{ NULL,  NULL,       "irssi",       1 << 2,       False,       -1 },
+	{ "VirtualBox",  NULL,       NULL,       1 << 5,       True,       -1 },
+	{ "Lotus Notes",  NULL,       NULL,       1 << 2,       True,       -1 },
 };
 
 /* layout(s) */
-static const float mfact      = 0.55; /* factor of master area size [0.05..0.95] */
-static const Bool resizehints = True; /* False means respect size hints in tiled resizals */
+static const float mfact      = 0.50; /* factor of master area size [0.05..0.95] */
+static const Bool resizehints = False; /* False means respect size hints in tiled resizals */
 
 static const Layout layouts[] = {
 	/* symbol     arrange function */
-	{ "[]=",      tile },    /* first entry is default */
-	{ "><>",      NULL },    /* no layout function means floating behavior */
-	{ "[M]",      monocle },
+	{ "*T*",      tile },    /* first entry is default */
+	{ "*F*",      NULL },    /* no layout function means floating behavior */
+	{ "*M*",      monocle },
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
+#define ALTKEY Mod1Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -45,13 +58,46 @@ static const Layout layouts[] = {
 #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
 
 /* commands */
-static const char *dmenucmd[] = { "dmenu_run", "-fn", font, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbgcolor, "-sf", selfgcolor, NULL };
-static const char *termcmd[]  = { "uxterm", NULL };
-
+static const char *dmenucmd[] = { "dmenu-launch.sh", };
+static const char *termcmd[]  = { "urxvtc", NULL };
+static const char *termshcmd[]  = { "urxvtc", "-e", "screen", "-d", "-R", "-t", "urxvt", "-S", "terminal", NULL };
+static const char *irssi[]  = { "urxvtc", "-title", "irssi", "-e", "screen", "-d", "-R", "-t", "irssi", "-S", "irssi", "irssi", NULL };
+static const char *wificmd[]  = {  "urxvtc", "-title", "wifi-select", "-e", "sudo","wifi-select", "wlan0", NULL };
+static const char *webcmd[]  = { "firefox", NULL };
+static const char *mailcmd[]  = { "urxvtc", "-title", "mutt", "-e","mutt", NULL };
+static const char *musiccmd[]  = { "urxvtc", "-title", "ncmpcpp", "-e","ncmpcpp", NULL };
+static const char *lockcmd[]  = { "lockx", NULL };
+static const char *volume_up[]  = { "amixer", "set", "Master", "2%+", NULL };
+static const char *volume_down[]  = { "amixer", "set", "Master", "2%-", NULL };
+static const char *volume_mute[]  = { "amixer", "set", "Master", "toggle", NULL };
+static const char *mpd_play[]  = { "mpc", "toggle", NULL };
+static const char *mpd_next[]  = { "mpc", "next", NULL };
+static const char *mpd_prev[]  = { "mpc", "prev", NULL };
+static const char *mpd_stop[]  = { "mpc", "stop", NULL };
+static const char *htop[]  = { "urxvtc", "-title", "htop", "-e", "htop", NULL };
+static const char *notes[]  = { "urxvtc", "-title", "Notes", "-e", "vim", "/home/firecat53/docs/notes.txt", NULL };
+static const char *caltodo[]  = { "firefox", "calendar.google.com", NULL };
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_p,      spawn,          {.v = htop } },
+	{ ALTKEY,                       XK_Return, spawn,          {.v = dmenucmd } },
+	{ MODKEY,             		XK_z, 	   spawn,          {.v = termcmd } },
+	{ MODKEY|ShiftMask,    		XK_z, 	   spawn,          {.v = termshcmd } },
+	{ MODKEY,             		XK_w, 	   spawn,          {.v = webcmd } },
+	{ MODKEY,             		XK_r, 	   spawn,          {.v = irssi } },
+	{ MODKEY,             		XK_e, 	   spawn,          {.v = mailcmd } },
+	{ MODKEY,             		XK_a, 	   spawn,          {.v = notes } },
+	{ MODKEY,             		XK_i, 	   spawn,          {.v = wificmd } },
+	{ MODKEY,             		XK_g, 	   spawn,          {.v = caltodo } },
+	{ MODKEY,             		XK_n, 	   spawn,          {.v = musiccmd } },
+	{ MODKEY|ALTKEY,      		XK_l, 	   spawn,          {.v = lockcmd } },
+	{ 0,  		 		 0x1008ff13, 	   spawn,          {.v = volume_up } },
+	{ 0,  		 		 0x1008ff11, 	   spawn,          {.v = volume_down } },
+	{ 0,  		 		 0x1008ff12, 	   spawn,          {.v = volume_mute } },
+	{ 0,  		 		 0x1008ff14, 	   spawn,          {.v = mpd_play} },
+	{ 0,  		 		 0x1008ff17, 	   spawn,          {.v = mpd_next} },
+	{ 0,  		 		 0x1008ff16, 	   spawn,          {.v = mpd_prev} },
+	{ 0,  		 		 0x1008ff15, 	   spawn,          {.v = mpd_stop} },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
@@ -71,6 +117,9 @@ static Key keys[] = {
 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
 	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	{ MODKEY,                       XK_Left,   view_prev_tag,  {0} },
+	{ MODKEY,                       XK_Right,  view_next_tag,  {0} },
+
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
diff -urpN dwm-source/config.mk dwm-patched/config.mk
--- dwm-source/config.mk	2009-07-30 08:59:20.000000000 -0700
+++ dwm-patched/config.mk	2009-08-01 13:08:28.000000000 -0700
@@ -15,8 +15,8 @@ XINERAMALIBS = -L${X11LIB} -lXinerama
 XINERAMAFLAGS = -DXINERAMA
 
 # includes and libs
-INCS = -I. -I/usr/include -I${X11INC}
-LIBS = -L/usr/lib -lc -L${X11LIB} -lX11 ${XINERAMALIBS}
+INCS = -I. -I/usr/include -I${X11INC} `pkg-config --cflags xft pango pangoxft`
+LIBS = -L/usr/lib -lc -L${X11LIB} -lX11 ${XINERAMALIBS} `pkg-config --libs xft pango pangoxft`
 
 # flags
 CPPFLAGS = -DVERSION=\"${VERSION}\" ${XINERAMAFLAGS}
diff -urpN dwm-source/dwm.1 dwm-patched/dwm.1
--- dwm-source/dwm.1	2009-07-30 08:59:20.000000000 -0700
+++ dwm-patched/dwm.1	2009-07-30 08:59:20.000000000 -0700
@@ -126,6 +126,14 @@ View all windows with nth tag.
 .B Mod1\-0
 View all windows with any tag.
 .TP
+.B Mod1\-Left
+View all windows with tag previous than current.  E.g.
+if tag 4 is selected, previous tag would be 3.
+.TP
+.B Mod1\-Right
+View all windows with tag next than current.  E.g.
+if tag 4 is selected, next tag would be 5.
+.TP
 .B Mod1\-Control\-[1..n]
 Add/remove all windows with nth tag to/from the view.
 .TP
diff -urpN dwm-source/dwm.c dwm-patched/dwm.c
--- dwm-source/dwm.c	2009-07-30 08:59:20.000000000 -0700
+++ dwm-patched/dwm.c	2009-08-01 13:31:28.000000000 -0700
@@ -36,6 +36,10 @@
 #include <X11/Xlib.h>
 #include <X11/Xproto.h>
 #include <X11/Xutil.h>
+#include <X11/Xft/Xft.h>
+#include <pango/pango.h>
+#include <pango/pangoxft.h>
+#include <pango/pango-font.h>
 #ifdef XINERAMA
 #include <X11/extensions/Xinerama.h>
 #endif /* XINERAMA */
@@ -46,8 +50,12 @@
 #define INRECT(X,Y,RX,RY,RW,RH) ((X) >= (RX) && (X) < (RX) + (RW) && (Y) >= (RY) && (Y) < (RY) + (RH))
 #define ISVISIBLE(C)            ((C->tags & C->mon->tagset[C->mon->seltags]))
 #define LENGTH(X)               (sizeof X / sizeof X[0])
+#ifndef MAX
 #define MAX(A, B)               ((A) > (B) ? (A) : (B))
+#endif
+#ifndef MIN
 #define MIN(A, B)               ((A) < (B) ? (A) : (B))
+#endif
 #define MOUSEMASK               (BUTTONMASK|PointerMotionMask)
 #define WIDTH(X)                ((X)->w + 2 * (X)->bw)
 #define HEIGHT(X)               ((X)->h + 2 * (X)->bw)
@@ -99,12 +107,19 @@ typedef struct {
 	unsigned long sel[ColLast];
 	Drawable drawable;
 	GC gc;
+
+	XftColor  xftnorm[ColLast];
+	XftColor  xftsel[ColLast];
+	XftDraw  *xftdrawable;
+
+	PangoContext *pgc;
+	PangoLayout  *plo;
+	PangoFontDescription *pfd;
+
 	struct {
 		int ascent;
 		int descent;
 		int height;
-		XFontSet set;
-		XFontStruct *xfont;
 	} font;
 } DC; /* draw context */
 
@@ -177,7 +192,7 @@ static void focus(Client *c);
 static void focusin(XEvent *e);
 static void focusmon(const Arg *arg);
 static void focusstack(const Arg *arg);
-static unsigned long getcolor(const char *colstr);
+//static unsigned long getcolor(const char *colstr);
 static Bool getrootptr(int *x, int *y);
 static long getstate(Window w);
 static Bool gettextprop(Window w, Atom atom, char *text, unsigned int size);
@@ -229,6 +244,9 @@ static void updatestatus(void);
 static void updatetitle(Client *c);
 static void updatewmhints(Client *c);
 static void view(const Arg *arg);
+static void view_next_tag(const Arg *);
+static void view_prev_tag(const Arg *);
+static void view_adjacent_tag(const Arg *, int);
 static Client *wintoclient(Window w);
 static Monitor *wintomon(Window w);
 static int xerror(Display *dpy, XErrorEvent *ee);
@@ -467,10 +485,6 @@ cleanup(void) {
 	for(m = mons; m; m = m->next)
 		while(m->stack)
 			unmanage(m->stack);
-	if(dc.font.set)
-		XFreeFontSet(dpy, dc.font.set);
-	else
-		XFreeFont(dpy, dc.font.xfont);
 	XUngrabKey(dpy, AnyKey, AnyModifier, root);
 	XFreePixmap(dpy, dc.drawable);
 	XFreeGC(dpy, dc.gc);
@@ -539,6 +553,7 @@ configurenotify(XEvent *e) {
 		dc.drawable = XCreatePixmap(dpy, root, sw, bh, DefaultDepth(dpy, screen));
 		updatebars();
 		for(m = mons; m; m = m->next)
+			XftDrawChange(dc.xftdrawable, dc.drawable);
 			XMoveResizeWindow(dpy, m->barwin, m->wx, m->by, m->ww, bh);
 		arrange();
 	}
@@ -744,7 +759,7 @@ drawtext(const char *text, unsigned long
 		return;
 	olen = strlen(text);
 	h = dc.font.ascent + dc.font.descent;
-	y = dc.y + (dc.h / 2) - (h / 2) + dc.font.ascent;
+	y = dc.y;
 	x = dc.x + (h / 2);
 	/* shorten text if necessary */
 	for(len = MIN(olen, sizeof buf); len && textnw(text, len) > dc.w - h; len--);
@@ -753,11 +768,8 @@ drawtext(const char *text, unsigned long
 	memcpy(buf, text, len);
 	if(len < olen)
 		for(i = len; i && i > len - 3; buf[--i] = '.');
-	XSetForeground(dpy, dc.gc, col[invert ? ColBG : ColFG]);
-	if(dc.font.set)
-		XmbDrawString(dpy, dc.drawable, dc.font.set, dc.gc, x, y, buf, len);
-	else
-		XDrawString(dpy, dc.drawable, dc.gc, x, y, buf, len);
+	pango_layout_set_text(dc.plo, text, len);
+	pango_xft_render_layout(dc.xftdrawable, (col==dc.norm?dc.xftnorm:dc.xftsel)+(invert?ColBG:ColFG), dc.plo, x * PANGO_SCALE, y * PANGO_SCALE);
 }
 
 void
@@ -857,13 +869,13 @@ focusstack(const Arg *arg) {
 }
 
 unsigned long
-getcolor(const char *colstr) {
+getcolor(const char *colstr, XftColor *color) {
 	Colormap cmap = DefaultColormap(dpy, screen);
-	XColor color;
+	Visual *vis = DefaultVisual(dpy, screen);
 
-	if(!XAllocNamedColor(dpy, cmap, colstr, &color, &color))
+	if(!XftColorAllocName(dpy,vis,cmap,colstr, color))
 		die("error, cannot allocate color '%s'\n", colstr);
-	return color.pixel;
+	return color->pixel;
 }
 
 Bool
@@ -960,37 +972,20 @@ grabkeys(void) {
 
 void
 initfont(const char *fontstr) {
-	char *def, **missing;
-	int i, n;
+	PangoFontMetrics *metrics;
 
-	missing = NULL;
-	dc.font.set = XCreateFontSet(dpy, fontstr, &missing, &n, &def);
-	if(missing) {
-		while(n--)
-			fprintf(stderr, "dwm: missing fontset: %s\n", missing[n]);
-		XFreeStringList(missing);
-	}
-	if(dc.font.set) {
-		XFontSetExtents *font_extents;
-		XFontStruct **xfonts;
-		char **font_names;
-
-		dc.font.ascent = dc.font.descent = 0;
-		font_extents = XExtentsOfFontSet(dc.font.set);
-		n = XFontsOfFontSet(dc.font.set, &xfonts, &font_names);
-		for(i = 0, dc.font.ascent = 0, dc.font.descent = 0; i < n; i++) {
-			dc.font.ascent = MAX(dc.font.ascent, (*xfonts)->ascent);
-			dc.font.descent = MAX(dc.font.descent,(*xfonts)->descent);
-			xfonts++;
-		}
-	}
-	else {
-		if(!(dc.font.xfont = XLoadQueryFont(dpy, fontstr))
-		&& !(dc.font.xfont = XLoadQueryFont(dpy, "fixed")))
-			die("error, cannot load font: '%s'\n", fontstr);
-		dc.font.ascent = dc.font.xfont->ascent;
-		dc.font.descent = dc.font.xfont->descent;
-	}
+	dc.pgc = pango_xft_get_context(dpy, screen);
+	dc.pfd = pango_font_description_from_string(fontstr);
+	 
+	metrics = pango_context_get_metrics(dc.pgc, dc.pfd, pango_language_from_string(setlocale(LC_CTYPE, "")));
+	 
+	dc.font.ascent  = pango_font_metrics_get_ascent(metrics) / PANGO_SCALE;
+	dc.font.descent = pango_font_metrics_get_descent(metrics) / PANGO_SCALE;
+	 
+	pango_font_metrics_unref(metrics);
+	 
+	dc.plo = pango_layout_new(dc.pgc);
+	pango_layout_set_font_description(dc.plo, dc.pfd);
 	dc.font.height = dc.font.ascent + dc.font.descent;
 }
 
@@ -1433,7 +1428,7 @@ setup(void) {
 	root = RootWindow(dpy, screen);
 	initfont(font);
 	sw = DisplayWidth(dpy, screen);
-	sh = DisplayHeight(dpy, screen);
+	sh = DisplayHeight(dpy, screen) - BOTTOM_BAR_HEIGHT;
 	bh = dc.h = dc.font.height + 2;
 	updategeom();
 	/* init atoms */
@@ -1447,17 +1442,20 @@ setup(void) {
 	cursor[CurResize] = XCreateFontCursor(dpy, XC_sizing);
 	cursor[CurMove] = XCreateFontCursor(dpy, XC_fleur);
 	/* init appearance */
-	dc.norm[ColBorder] = getcolor(normbordercolor);
-	dc.norm[ColBG] = getcolor(normbgcolor);
-	dc.norm[ColFG] = getcolor(normfgcolor);
-	dc.sel[ColBorder] = getcolor(selbordercolor);
-	dc.sel[ColBG] = getcolor(selbgcolor);
-	dc.sel[ColFG] = getcolor(selfgcolor);
+	dc.norm[ColBorder] = getcolor(normbordercolor, dc.xftnorm+ColBorder);
+	dc.norm[ColBG] = getcolor(normbgcolor, dc.xftnorm+ColBG);
+	dc.norm[ColFG] = getcolor(normfgcolor, dc.xftnorm+ColFG);
+	dc.sel[ColBorder] = getcolor(selbordercolor, dc.xftsel+ColBorder);
+	dc.sel[ColBG] = getcolor(selbgcolor, dc.xftsel+ColBG);
+	dc.sel[ColFG] = getcolor(selfgcolor, dc.xftsel+ColFG);
 	dc.drawable = XCreatePixmap(dpy, root, DisplayWidth(dpy, screen), bh, DefaultDepth(dpy, screen));
 	dc.gc = XCreateGC(dpy, root, 0, NULL);
 	XSetLineAttributes(dpy, dc.gc, 1, LineSolid, CapButt, JoinMiter);
-	if(!dc.font.set)
-		XSetFont(dpy, dc.gc, dc.font.xfont->fid);
+
+	dc.xftdrawable = XftDrawCreate(dpy, dc.drawable, DefaultVisual(dpy,screen), DefaultColormap(dpy,screen));
+	if(!dc.xftdrawable)
+	       printf("error, cannot create drawable\n");
+  
 	/* init bars */
 	for(blw = i = 0; LENGTH(layouts) > 1 && i < LENGTH(layouts); i++) {
 		w = TEXTW(layouts[i].symbol);
@@ -1531,13 +1529,10 @@ tagmon(const Arg *arg) {
 
 int
 textnw(const char *text, unsigned int len) {
-	XRectangle r;
-
-	if(dc.font.set) {
-		XmbTextExtents(dc.font.set, text, len, NULL, &r);
-		return r.width;
-	}
-	return XTextWidth(dc.font.xfont, text, len);
+	PangoRectangle r;
+	pango_layout_set_text(dc.plo, text, len);
+	pango_layout_get_extents(dc.plo, &r, 0);
+	return r.width / PANGO_SCALE;
 }
 
 void
@@ -1713,7 +1708,7 @@ updategeom(void) {
 			m->mx = m->wx = info[i].x_org;
 			m->my = m->wy = info[i].y_org;
 			m->mw = m->ww = info[i].width;
-			m->mh = m->wh = info[i].height;
+			m->mh = m->wh = info[i].height - BOTTOM_BAR_HEIGHT;
 		}
 		XFree(info);
 	}
@@ -1939,6 +1934,42 @@ zoom(const Arg *arg) {
 	arrange();
 }
 
+static void
+view_adjacent_tag(const Arg *arg, int distance)
+{
+    int i, curtags;
+    int seltag = 0;
+    Arg a;
+
+    curtags = selmon->tagset[selmon->seltags] ^ (arg->ui & TAGMASK);
+    for (i = 0; i < LENGTH(tags); i++) {
+        if ((curtags & (1 << i)) != 0) {
+            seltag = i;
+            break;
+        }
+    }
+    
+    seltag = (seltag + distance) % (int)LENGTH(tags);
+    if (seltag < 0)
+        seltag += LENGTH(tags);
+
+    a.i = (1 << seltag);
+    view(&a);
+}
+
+static void
+view_next_tag(const Arg *arg)
+{
+    view_adjacent_tag(arg, +1);
+}
+
+static void
+view_prev_tag(const Arg *arg)
+{
+    view_adjacent_tag(arg, -1);
+}
+
+
 int
 main(int argc, char *argv[]) {
 	if(argc == 2 && !strcmp("-v", argv[1]))
